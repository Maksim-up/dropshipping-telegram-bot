require('dotenv').config();
const TelegramBot = require('node-telegram-bot-api');
const crypto = require('crypto');

const token = process.env.TELEGRAM_TOKEN;
const adminChatId = process.env.CHAT_ID;

const bot = new TelegramBot(token, { polling: true });

const userStates = {};
const orderTimeouts = {};

const steps = [
  '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:',
  '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä, +998901234567):',
  '–í–≤–µ–¥–∏—Ç–µ —Ç–æ–≤–∞—Ä:',
  '–í–≤–µ–¥–∏—Ç–µ —Ä–∞–∑–º–µ—Ä:',
  '–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥:',
  '–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å:',
];

const paymentDetails = `
üí≥ –†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã:
- –ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã: 4294 3400 0365 4321
- –ü–æ–ª—É—á–∞—Ç–µ–ª—å: Vyugin Maksim
- –í–∞–∂–Ω–æ! –í –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –ø–µ—Ä–µ–≤–æ–¥—É —É–∫–∞–∂–∏—Ç–µ ID –∑–∞–∫–∞–∑–∞
`;

function generateOrderId() {
  return crypto.randomBytes(3).toString('hex').toUpperCase();
}

function isValidPhone(phone) {
  // –ü—Ä–∏–º–µ—Ä –ø—Ä–æ—Å—Ç–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞: –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å + –∏ —Å–æ–¥–µ—Ä–∂–∞—Ç—å 12-15 —Ü–∏—Ñ—Ä
  return /^\+\d{12,15}$/.test(phone);
}

bot.on('message', (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text;

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–π–º–∞—É—Ç–∞ –Ω–∞ –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–∫–∞–∑
  if (orderTimeouts[chatId]) {
    const diff = Date.now() - orderTimeouts[chatId];
    if (diff < 5 * 60 * 1000) {
      bot.sendMessage(chatId, `–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ ${Math.ceil((5 * 60 * 1000 - diff) / 1000)} —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –Ω–æ–≤—ã–º –∑–∞–∫–∞–∑–æ–º.`);
      return;
    } else {
      delete orderTimeouts[chatId];
    }
  }

  if (!userStates[chatId]) {
    userStates[chatId] = { step: 0, data: {} };
    bot.sendMessage(chatId, steps[0]);
    return;
  }

  const user = userStates[chatId];

  switch (user.step) {
    case 0:
      user.data.name = text;
      break;
    case 1:
      if (!isValidPhone(text)) {
        bot.sendMessage(chatId, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ +998901234567');
        return; // –Ω–µ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —à–∞–≥, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤—ë–ª –ø—Ä–∞–≤–∏–ª—å–Ω–æ
      }
      user.data.phone = text;
      break;
    case 2:
      user.data.product = text;
      break;
    case 3:
      user.data.size = text;
      break;
    case 4:
      user.data.city = text;
      break;
    case 5:
      user.data.address = text;
      break;
  }

  user.step++;

  if (user.step < steps.length) {
    bot.sendMessage(chatId, steps[user.step]);
  } else {
    const order = user.data;
    const orderId = generateOrderId();

    const adminMessage =
      `üì¶ –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ #${orderId}:\n` +
      `üë§ –ò–º—è: ${order.name}\n` +
      `üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${order.phone}\n` +
      `üëü –¢–æ–≤–∞—Ä: ${order.product}\n` +
      `üìè –†–∞–∑–º–µ—Ä: ${order.size}\n` +
      `üìç –ì–æ—Ä–æ–¥: ${order.city}\n` +
      `üè† –ê–¥—Ä–µ—Å: ${order.address}`;

    bot.sendMessage(adminChatId, adminMessage);

    bot.sendMessage(
      chatId,
      `–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑! –í–∞—à –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: #${orderId}\n` +
        paymentDetails +
        '\n–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –ø—Ä–∏—à–ª–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ.'
    );

    delete userStates[chatId];
    orderTimeouts[chatId] = Date.now(); // —Å—Ç–∞–≤–∏–º —Ç–∞–π–º–∞—É—Ç –Ω–∞ 5 –º–∏–Ω—É—Ç
  }
});
